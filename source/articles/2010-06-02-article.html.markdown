---
title: ハムカツの中身
date: 2010-06-02 16:40 JST
authors: komagata
tags:  ham-cutlet
---
ハムです。

ではなくて、先日リリースしたインデントを綺麗にするサービス「Ham Cutlet」の技術的な話しです。

RubyにHamlというテンプレート言語があるんですが、それのユーザーの方なら、「Haml使っただけじゃん」という感じだと思います。Hamlが素晴らしいんです。Hamlサイコー！

要は下記の2行です。

```
haml = Haml::HTML.new(params[:source]).render
@html = Haml::Engine.new(haml, :attr_wrapper => '"').render
```

Hamlのソースを覗いてみるとHaml::HTMLというクラスでHTMLのHaml化、Haml::EngineというクラスでHamlのHTML化が行われていることがわかります。綺麗に作られているのでアプリに組み込むのも簡単です。

Hamlの吐くHTMLのattributeはデフォルトでシングルクォートですが、Haml::Engineのコンストラクタのオプションでダブルクォートに変えられます。いい加減なHTMLの修正・補完にはHaml::HTML内部でHpricotが使われています。

ちなみに当然Ham CutletのサービスのHTMLもHamlを使って書かれています。ソースのインデントが綺麗になっているのが分かると思います。

#### Hamlとの出会い

HTMLのソースの見栄えなんてまったくどうでもいいことなのかもしれませんが、僕は非常に気になっていて、Railsでインデントの違うファイルから共通のpartialテンプレートを読み込んだ時に、こちらの努力ではどうしてもインデントが揃わないことに非常に苛立っていました。（ [HTMLのインデントを合わせたい - p0t](http://docs.komagata.org/4244)）

これは僕にとっては大問題だったんですが、周りに訴えても、「へぇ〜」とか「我慢すればいいんじゃないんすか？」といった感じで諦めそうになっていました。

Hamlの噂は何となく聞いていたんですが、Ruby on Rails Summer Festival 2008というイベントで [id:ursm](http://d.hatena.ne.jp/ursm/)さん（現 [日本Hamlの会](http://haml.ursm.jp/)）がHamlの発表をされました。

<script type="text/javascript" src="http://ext.nicovideo.jp/thumb_watch/sm4445816"></script><noscript><a href="http://www.nicovideo.jp/watch/sm4445816">【ニコニコ動画】Hamlプラグインでビューをすっきり記述する</a></noscript>

その後の懇親会で [id:ursm](http://d.hatena.ne.jp/ursm/)さんに前述の疑問をブツけてみたところ、「partialを読み込んだファイルのインデントに揃いますよ」とのお言葉。

「コレしかない！」と思い自分のブログなどをHaml化していきました。しかし、僕も雇われの身。仕事のプロジェクトで周りの迷惑も考えず、勝手なテンプレート言語を持ち込む訳にもいかず自重していました。

しかし、FJORDで [@machida](http://twitter.com/machida)さんに話したところ、何故か「いいですね！」ということになり、Help me, hackers!他ほとんどの仕事でHamlを使えるようになりました。 （Git + Rails + Hamlのマークアップが出来るデザイナーのご用命は [@machida](http://twitter.com/machida)まで・・・）

Ham Cutletは [こちら](http://github.com/komagata/hamcutlet)でソースも公開しています。下記で簡単にローカルで動かせるのでヘボイところなど、ご指摘いただけると嬉しいです。

```
% gem install bundler
% bundle install
% rackup
```

（http://localhost:9292/ にアクセス！）

Hamlを知ってればすぐ作れるサービスです。正直、heroku + sinatra + bundlerという組み合わせの使い方を調べるのにほとんどの時間を取られました・・・。このセットはちょっとしたWebアプリの作成にとても便利ですね。特にBundlerは0.9系になってから使い方も更にスマートになってRubyGemsの利便性を更に強調してくれるので大好きです。
